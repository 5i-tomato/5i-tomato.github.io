[{"content":"\r#\rGit操作速记\r什么是Git？\nGit 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。 #\r1. 创建新仓库\r1 git init #\r2. 检出仓库\r1 2 git clone /path/to/repository git clone username@host:/path/to/repository #\r3. 工作流\r你的本地仓库由 git 维护的三棵“树”组成。\n第一个是你的 工作目录，它持有实际文件\n第二个是 暂存区（Index），它像个缓存区域，临时保存你的改动\n最后是 HEAD，它指向你最后一次提交的结果\n#\r4. 添加和提交\r1 git add \u0026lt;filename\u0026gt; 1 git commit -m \u0026#34;[comment]\u0026#34; #\r5. 推送改动\r从HEAD推送到远端仓库，其中master可以替换成任何分支。\n1 git push origin master 如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：\n1 git remote add origin \u0026lt;server\u0026gt; 如此你就能够将你的改动推送到所添加的服务器上去了。\n#\r6. 分支\r分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。\n创建一个叫做“feature_x”的分支，并切换过去：\n1 git checkout -b feature_x 切换回主分支：\n1 git checkout master 再把新建的分支删掉：\n1 git branch -d feature_x 除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：\n1 git push origin \u0026lt;branch\u0026gt; #\r7. 更新与合并\r要更新你的本地仓库至最新改动，执行：\n1 git pull 以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。 要合并其他分支到你的当前分支（例如 master），执行：\n1 git merge \u0026lt;branch\u0026gt; 在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。 这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：\n1 git add \u0026lt;filename\u0026gt; 在合并改动之前，你可以使用如下命令预览差异：\n1 `git diff \u0026lt;source_branch\u0026gt; \u0026lt;target_branch\u0026gt; #\r8.替换本地改动\r假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：\n1 git checkout -- \u0026lt;filename\u0026gt; 此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。\n假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：\n1 2 git fetch origin git reset --hard origin/master ","date":"2024-04-18T00:00:00Z","image":"https://5i-tomato.github.io/p/git-learning/3_hu329c2b1d180f8a2a0671c8d0fe9f868d_69796_120x120_fill_box_smart1_3.png","permalink":"https://5i-tomato.github.io/p/git-learning/","title":"Git学习随笔"},{"content":"\r#\rMinecraft教程\rStatement：\n请支持正版！！！\n请注意分辨，本人不承担任何因个人操作造成的损失\n本教程是由玩家 Tomato295 编写的，如有疑问\n请移步至邮箱咨询：160783295@qq.com\n#\r一、选择启动器\r目前国内的主流启动器有：\nMInecraft Launcher（官方启动器，因为其谜一般的下载速度以及功能性，不推荐）\nHello Minecraft! Launcher（老牌第三方启动器，稳定）\nPlain Craft Launcher 2 （近年来的新兴启动器，功能丰富）\nBakaXL（二刺猿浓度较高的启动器，并且使用体验不错）\n其他启动器（优秀的启动器还有很多，请自行发掘）\n#\r二、选择登录方式\rMicrosoft登录（使用微软账号登录，由于Mojang官方的账号迁移，现已经成为绝大部分正版玩家的登录方式）\nMojang登录（使用Mojang账号登录，由于账号迁移政策，现已逐渐退出历史）\n第三方外置登录（使用第三方皮肤站，如Littleskin的验证服务器进行登录验证，属于非正版）\n下面是第三方登录的图解教程（LittleSkin与PCL2启动器为例）：\n离线模式（不过多介绍）\n请支持正版！！！\n#\r三、游戏下载\r在此我以Plain Craft Launcher 2 启动器为例。\n操作方式如下图：\n在此我介绍一下这些附加安装：\nOPtifine又叫高清修复，是很多光影的前置，同时也能实现性能优化。但不兼容Fabric，无法同时安装\nForge是MInecraft的主流API目前有50%的mod都在使用Forge\nFabric是一个用于Minecraft1.14+ 的轻量Mod API\nFabric API 必须与Fabric同时安装\nOptifabric 是 Optifine 的 Fabric 版本\nLiteLoader 已过时\n选择好附属安装后等待安装完成即可开始游戏。\n#\r四、其他安装\r#\rMod安装\r值得一提的是，目前Plain Craft Launcher 2、BakaXL 和Hello Minecraft! Launcher 等第三方启动器均支持启动器内Mod下载，为玩家提供了极大的便利。你也可以在互联网上下载mod文件。（mod的命名一般为 .jar ）\nMod下载完毕后，请放置在你游戏文件夹的 mods 文件夹下。\n注意：\nMod需下载你所安装游戏的对应版本，如1.12.2 的 Forge 版，1.16.5 的 Fabric 版。下载不对应的版本可能会导致游戏出现错误。 Mod的安装不是实时更新的，安装完毕后请重启游戏。 部分mod会依赖于前置mod，需一起下载。 部分mod之前可能会有冲突。 #\r材质包安装\r材质包文件请自行在互联网上寻找，一般后缀名为.zip，无需解压，直接放在resourcepacks文件夹下即可在游戏中选择加载。\n与mod一样，材质包需要对应版本。\n#\r光影包安装\r光影包需安装Optifine或者Optifabric，也可安装IRIS Shader mod (Fabric) 后\n光影包文件请自行在互联网上寻找，一般后缀名为.zip，无需解压，直接放在shaderpacks文件夹下即可在游戏中的视频设置中选择加载。\n光影包一般没有版本限制，但有部分只支持OPtifine。\n#\r数据包安装\r数据包一般可以从网上下载等不同渠道获得。它应该是一个.zip文件或一个文件夹。\n有的.zip文件本身并不是一个数据包，需要解压后提取数据包文件夹。这种情况下，一般数据包来源会有安装流程介绍。 如果不确定，可以打开这个.zip文件，查看里面是否有data文件夹和pack.mcmeta文件。如果有的话这个.zip文件就是数据包本体，可以直接放进datapacks文件夹。 一个文件夹根目录中必须包含pack.mcmeta文件才可以被游戏读取并辨认为数据包。 以下是在单人游戏中安装数据包的方法：\n打开Minecraft。 选择你需要安装数据包的世界，点击“编辑”，然后点击“打开世界文件夹”。 打开其中名为datapacks的文件夹，并将数据包.zip文件或文件夹放入其中。 下次打开世界的时候这个数据包就会被加载，并且优先级最高。 #\r整合包安装\r整合包也可直接在启动器中下载安装，也可从互联网下载。\n标准的整合包为.zip格式可直接拖入第三方启动器进行下载安装。\n非标准的整合包可能为一个游戏的打包压缩包，需解压后运行\n#\r五、个性化\r更改皮肤\n到此为止，你可能想要摆脱 Steve 和 Alex 的默认皮肤，更改一个属于自己的、更有个性的皮肤。\n皮肤的存储文件命名一般是*.png，可以自行使用工具（如MCSkin 3D）绘制，或在互联网上下载。\n正版用户可以直接前往 Minecraft 官方网站 或者 官方启动器更改皮肤。\n第三方登录可以在所属皮肤站更改皮肤。\n更改披风\n不像皮肤，披风不能被自由定制。玩家只能通过一些活动或事件来获取特定的披风。如果玩家拥有任何披风，就可以选择一件来装备上。一部分客户端Mod可能会提供其自定义的披风，但这些披风对玩家自己或其他安装了相同客户端Mod的玩家以外通常是不可见的。\n更换方式与更改皮肤方式一致。\n目前最常见的披风主要有三个。\n#\r六、游玩教程\r未完待续\n","date":"2020-09-09T00:00:00Z","image":"https://5i-tomato.github.io/p/minecraft-tutorial/wallpaper_minecraft_bedrock_edition_2560x1440_hud51d38eb75b0af79b8d133f241dd8e16_3249053_120x120_fill_box_smart1_3.png","permalink":"https://5i-tomato.github.io/p/minecraft-tutorial/","title":"Minecraft 教程"},{"content":"Hello, world!\n","date":"2020-03-17T00:00:00Z","image":"https://5i-tomato.github.io/p/hello-world/1_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://5i-tomato.github.io/p/hello-world/","title":"Hello, World!"}]